---
import Layout from '../layouts/Layout.astro';
import NavBar from '../components/NavBarCentered.astro';

const validWords = await Astro.glob('./words/*.txt');
const wordList = validWords.map(wordFile => wordFile.default as string);

function getRandomWord(words: string[]): string {
    const randomIndex = Math.floor(Math.random() * words.length);
    return words[randomIndex];
}

const randomWord = getRandomWord(wordList).toLowerCase();
const maxGuesses = 6;
---

<Layout title="Wordle Game">
    <div class="bg-stone-100 w-100 min-h-screen p-10">
        <div class="min-h-screen bg-gray-100 p-4">
            <NavBar
                    link1name="Love"
                    link1="/home"
                    link2name="Fan"
                    link2="/fan"
                    link3name="Wordle"
                    link3="/wordle"
            />
            <div class="space-y-6 flex-col flex items-center text-center">
                <div id="wordle-game" class="prose prose-lg text-center mt-10">
                    <p>Guess the word:</p>
                    <div id="guesses">
                        <!-- JavaScript will populate this -->
                    </div>
                    <input type="text" id="guess-input" maxlength="5" />
                    <button id="submit-guess">Submit Guess</button>
                    <p id="result-message"></p>
                </div>
                <div id="streak-counter" class="prose prose-lg text-center mt-10">
                    <p>Current Streak: <span id="streak"></span></p>
                </div>
            </div>
        </div>
    </div>
    <script is:inline>
        const randomWord = "{{randomWord}}";
        let currentGuess = '';
        let guesses = [];
        let streak = parseInt(localStorage.getItem('wordleStreak') || '0', 10);

        document.getElementById('streak').innerText = streak;

        document.getElementById('submit-guess').addEventListener('click', () => {
            currentGuess = document.getElementById('guess-input').value.toLowerCase();
            if (currentGuess.length !== 5) {
                document.getElementById('result-message').innerText = 'Your guess must be 5 letters long!';
                return;
            }

            guesses.push(currentGuess);
            document.getElementById('guess-input').value = '';
            renderGuesses();

            if (currentGuess === randomWord) {
                streak++;
                localStorage.setItem('wordleStreak', streak.toString());
                document.getElementById('result-message').innerText = 'You guessed correctly!';
            } else if (guesses.length >= {{maxGuesses}}) {
                document.getElementById('result-message').innerText = `Game over! The word was ${randomWord}.`;
                streak = 0;
                localStorage.setItem('wordleStreak', '0');
            } else {
                document.getElementById('result-message').innerText = 'Try again!';
            }

            document.getElementById('streak').innerText = streak;
        });

        function renderGuesses() {
            const guessesContainer = document.getElementById('guesses');
            guessesContainer.innerHTML = '';
            guesses.forEach(guess => {
                const guessDiv = document.createElement('div');
                guessDiv.className = 'guess';

                for (let i = 0; i < guess.length; i++) {
                    const letter = guess[i];
                    const letterSpan = document.createElement('span');
                    letterSpan.className = 'letter';

                    if (letter === randomWord[i]) {
                        letterSpan.style.backgroundColor = 'green';
                    } else if (randomWord.includes(letter)) {
                        letterSpan.style.backgroundColor = 'yellow';
                    } else {
                        letterSpan.style.backgroundColor = 'gray';
                    }

                    letterSpan.innerText = letter;
                    guessDiv.appendChild(letterSpan);
                }

                guessesContainer.appendChild(guessDiv);
            });
        }
    </script>
</Layout>
